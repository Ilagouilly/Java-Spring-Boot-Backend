plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'pl.allegro.tech.build.axion-release' version '1.12.0'
    id 'java'
    id 'com.palantir.docker' version '0.25.0'
    id 'com.palantir.docker-run' version '0.25.0'
    id 'jp.classmethod.aws.cloudformation' version '0.41'
}

group = 'com.ismaillagouilly'
version = '1.0.0'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.12'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

String dockerHubUsernameProperty = "closeapprepository"
String imageName = "${dockerHubUsernameProperty}/closeapp-$version"

docker {
    name imageName
    files "build/libs/closeapp-1.0.0.jar"
    buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}

dockerRun {
    name project.name
    image imageName
    ports '8080:8080'
    clean true
}

bootJar {
    archiveFileName = 'closeapp-1.0.0.jar'
}

test {
    useJUnitPlatform()
}

project.version = scmVersion.version

cloudFormation {
    stackName "$project.name-stack"
    stackParams([
            SubnetID: findProperty('subnetId') ?: '',
            ServiceName: project.name,
            ServiceVersion: '-1.0.0',
            DockerHubUsername: dockerHubUsernameProperty
    ])
    templateFile project.file("ecs.yml")
}

aws {
    region = findProperty('region') ?: 'eu-west-3'
}